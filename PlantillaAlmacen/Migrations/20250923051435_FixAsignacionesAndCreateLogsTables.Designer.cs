// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantillaAlmacen.Models;

#nullable disable

namespace PlantillaAlmacen.Migrations
{
    [DbContext(typeof(AlmacenDbContext))]
    [Migration("20250923051435_FixAsignacionesAndCreateLogsTables")]
    partial class FixAsignacionesAndCreateLogsTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlantillaAlmacen.Models.Articulo", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticulo"));

                    b.Property<string>("Caracterisiticas")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCatalogoArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusArticulo")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NumeroSerie")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdCatalogoArticulo");

                    b.HasIndex("IdEstatusArticulo");

                    b.ToTable("Articulo", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Asignacion", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacion"));

                    b.Property<bool>("Activo")
                        .HasMaxLength(255)
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsinacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoEntrega")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoRecepcion")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusAsignacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdFrente")
                        .HasColumnType("int");

                    b.Property<int?>("IdPersonal")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesDevolucion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstadoEntrega");

                    b.HasIndex("IdEstadoRecepcion");

                    b.HasIndex("IdEstatusAsignacion");

                    b.HasIndex("IdFrente");

                    b.HasIndex("IdPersonal");

                    b.ToTable("Asignacion", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.CatalogoArticulo", b =>
                {
                    b.Property<int>("IdCatalogoArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatalogoArticulo"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCatalogoArticulo");

                    b.HasIndex("IdCategoria");

                    b.ToTable("CatalogoArticulo", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstadoEntrega", b =>
                {
                    b.Property<int>("IdEstadoEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoEntrega"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstadoEntrega");

                    b.ToTable("EstadoEntrega", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusArticulo", b =>
                {
                    b.Property<int>("IdEstatusArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatusArticulo"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstatusArticulo");

                    b.ToTable("EstatusArticulo", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusAsignacion", b =>
                {
                    b.Property<int>("IdEstatusAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatusAsignacion"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstatusAsignacion");

                    b.ToTable("EstatusAsignacion", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusPersonal", b =>
                {
                    b.Property<int>("IdEstatusPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatusPersonal"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstatusPersonal");

                    b.ToTable("EstatusPersonal", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Frente", b =>
                {
                    b.Property<int>("IdFrente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFrente"));

                    b.Property<bool>("Activo")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFrente");

                    b.ToTable("Frente", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.MovimientoInventario", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<int>("ArticuloIdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMovimientoIdTipoMovimiento")
                        .HasColumnType("int");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("ArticuloIdArticulo");

                    b.HasIndex("TipoMovimientoIdTipoMovimiento");

                    b.ToTable("MovimientoInventario", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Personal", b =>
                {
                    b.Property<int>("IdPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonal"));

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusPersonal")
                        .HasColumnType("int");

                    b.Property<int>("IdFrente")
                        .HasColumnType("int");

                    b.Property<int>("IdPuesto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPersonal");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstatusPersonal");

                    b.HasIndex("IdFrente");

                    b.HasIndex("IdPuesto");

                    b.ToTable("Personal", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Puesto", b =>
                {
                    b.Property<int>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPuesto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdPuesto");

                    b.ToTable("Puesto", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("PermisoIdPermiso")
                        .HasColumnType("int");

                    b.Property<int>("RolIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdPermiso");

                    b.HasIndex("PermisoIdPermiso");

                    b.HasIndex("RolIdRol");

                    b.ToTable("RolPermiso", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.TipoMovimiento", b =>
                {
                    b.Property<int>("IdTipoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoMovimiento"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoMovimiento");

                    b.ToTable("TipoMovimiento", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersonal")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersonal");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("RolIdRol")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("RolIdRol");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Articulo", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.CatalogoArticulo", "CatalogoArticulo")
                        .WithMany()
                        .HasForeignKey("IdCatalogoArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstatusArticulo", "EstatusArticulo")
                        .WithMany()
                        .HasForeignKey("IdEstatusArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogoArticulo");

                    b.Navigation("EstatusArticulo");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Asignacion", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento");

                    b.HasOne("PlantillaAlmacen.Models.EstadoEntrega", "EstadoEntrega")
                        .WithMany()
                        .HasForeignKey("IdEstadoEntrega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstadoEntrega", "EstadoRecepcion")
                        .WithMany()
                        .HasForeignKey("IdEstadoRecepcion");

                    b.HasOne("PlantillaAlmacen.Models.EstatusAsignacion", "EstatusAsignacion")
                        .WithMany()
                        .HasForeignKey("IdEstatusAsignacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Frente", "Frente")
                        .WithMany()
                        .HasForeignKey("IdFrente");

                    b.HasOne("PlantillaAlmacen.Models.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("IdPersonal");

                    b.Navigation("Articulo");

                    b.Navigation("Departamento");

                    b.Navigation("EstadoEntrega");

                    b.Navigation("EstadoRecepcion");

                    b.Navigation("EstatusAsignacion");

                    b.Navigation("Frente");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.CatalogoArticulo", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.MovimientoInventario", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloIdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoIdTipoMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Personal", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Departamento", "Departamento")
                        .WithMany("Personales")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstatusPersonal", "EstatusPersonal")
                        .WithMany("Personales")
                        .HasForeignKey("IdEstatusPersonal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Frente", "Frente")
                        .WithMany("Personales")
                        .HasForeignKey("IdFrente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Puesto", "Puesto")
                        .WithMany("Personales")
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("EstatusPersonal");

                    b.Navigation("Frente");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.RolPermiso", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("PermisoIdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("RolIdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Usuario", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("IdPersonal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.UsuarioRol", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolIdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Departamento", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusPersonal", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Frente", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Puesto", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Rol", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
