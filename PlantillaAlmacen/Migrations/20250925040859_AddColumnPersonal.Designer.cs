// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantillaAlmacen.Models;

#nullable disable

namespace PlantillaAlmacen.Migrations
{
    [DbContext(typeof(AlmacenDbContext))]
    [Migration("20250925040859_AddColumnPersonal")]
    partial class AddColumnPersonal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlantillaAlmacen.Models.Almacen", b =>
                {
                    b.Property<int>("IdAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlmacen"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdAlmacen");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Articulo", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticulo"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("FacturaArchivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAlmacen")
                        .HasColumnType("int");

                    b.Property<int>("IdCatalogoArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusArticulo")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdAlmacen");

                    b.HasIndex("IdCatalogoArticulo");

                    b.HasIndex("IdEstatusArticulo");

                    b.ToTable("Articulos", (string)null);

                    b.HasDiscriminator().HasValue("Articulo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloEstadoHistorial", b =>
                {
                    b.Property<int>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistorial"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusArticuloAnterior")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusArticuloNuevo")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ArticuloEstadoHistoriales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Asignacion", b =>
                {
                    b.Property<int>("IdAsignacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsignacion"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoEntrega")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoRecepcion")
                        .HasColumnType("int");

                    b.Property<int?>("IdFrente")
                        .HasColumnType("int");

                    b.Property<int?>("IdPersonal")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionesDevolucion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdAsignacion");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstadoEntrega");

                    b.HasIndex("IdEstadoRecepcion");

                    b.HasIndex("IdFrente");

                    b.HasIndex("IdPersonal");

                    b.HasIndex("IdArticulo", "FechaDevolucion")
                        .IsUnique()
                        .HasFilter("[FechaDevolucion] IS NULL");

                    b.ToTable("Asignacion", null, t =>
                        {
                            t.HasCheckConstraint("CK_Asignacion_DestinoUnico", "((CASE WHEN [IdPersonal] IS NULL THEN 0 ELSE 1 END) +  (CASE WHEN [IdDepartamento] IS NULL THEN 0 ELSE 1 END) +  (CASE WHEN [IdFrente] IS NULL THEN 0 ELSE 1 END)) = 1");
                        });
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.AsignacionEvento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<string>("Comentario")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsignacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstadoEntrega")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdAsignacion");

                    b.HasIndex("IdEstadoEntrega");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AsignacionEventos");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.CatalogoArticulo", b =>
                {
                    b.Property<int>("IdCatalogoArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatalogoArticulo"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdUnidadMedida")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCatalogoArticulo");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("CatalogoArticulo", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstadoEntrega", b =>
                {
                    b.Property<int>("IdEstadoEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoEntrega"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstadoEntrega");

                    b.ToTable("EstadoEntrega", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusArticulo", b =>
                {
                    b.Property<int>("IdEstatusArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatusArticulo"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstatusArticulo");

                    b.ToTable("EstatusArticulo", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusPersonal", b =>
                {
                    b.Property<int>("IdEstatusPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstatusPersonal"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstatusPersonal");

                    b.ToTable("EstatusPersonal", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Frente", b =>
                {
                    b.Property<int>("IdFrente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFrente"));

                    b.Property<bool>("Activo")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdFrente");

                    b.ToTable("Frente", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.MovimientoInventario", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<int>("ArticuloIdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMovimientoIdTipoMovimiento")
                        .HasColumnType("int");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("ArticuloIdArticulo");

                    b.HasIndex("TipoMovimientoIdTipoMovimiento");

                    b.ToTable("MovimientoInventario", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Personal", b =>
                {
                    b.Property<int>("IdPersonal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonal"));

                    b.Property<string>("ArchivoLicencia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("IdEstatusPersonal")
                        .HasColumnType("int");

                    b.Property<int>("IdFrente")
                        .HasColumnType("int");

                    b.Property<int>("IdPuesto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TieneLicenciaManejo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VigenciaLicencia")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPersonal");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("IdEstatusPersonal");

                    b.HasIndex("IdFrente");

                    b.HasIndex("IdPuesto");

                    b.ToTable("Personal", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Puesto", b =>
                {
                    b.Property<int>("IdPuesto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPuesto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdPuesto");

                    b.ToTable("Puesto", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdPermiso")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdPermiso");

                    b.HasIndex("IdPermiso");

                    b.ToTable("RolPermiso", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.TipoMovimiento", b =>
                {
                    b.Property<int>("IdTipoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoMovimiento"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoMovimiento");

                    b.ToTable("TipoMovimiento", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.UnidadMedida", b =>
                {
                    b.Property<int>("IdUnidadMedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadMedida"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUnidadMedida");

                    b.ToTable("UnidadMedida", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersonal")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersonal");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloCombustible", b =>
                {
                    b.HasBaseType("PlantillaAlmacen.Models.Articulo");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Combustible");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloEnfermeria", b =>
                {
                    b.HasBaseType("PlantillaAlmacen.Models.Articulo");

                    b.Property<DateTime>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Enfermeria");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloHerramienta", b =>
                {
                    b.HasBaseType("PlantillaAlmacen.Models.Articulo");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Herramienta");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloPapeleria", b =>
                {
                    b.HasBaseType("PlantillaAlmacen.Models.Articulo");

                    b.Property<int>("CantidadPaquete")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Papeleria");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloTecnologia", b =>
                {
                    b.HasBaseType("PlantillaAlmacen.Models.Articulo");

                    b.Property<string>("Caracteristicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Articulos", t =>
                        {
                            t.Property("Marca")
                                .HasColumnName("ArticuloTecnologia_Marca");

                            t.Property("Modelo")
                                .HasColumnName("ArticuloTecnologia_Modelo");

                            t.Property("NumeroSerie")
                                .HasColumnName("ArticuloTecnologia_NumeroSerie");
                        });

                    b.HasDiscriminator().HasValue("Tecnologia");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloVehiculo", b =>
                {
                    b.HasBaseType("PlantillaAlmacen.Models.Articulo");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolizaSeguro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaCirculacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Articulos", t =>
                        {
                            t.Property("Marca")
                                .HasColumnName("ArticuloVehiculo_Marca");

                            t.Property("Modelo")
                                .HasColumnName("ArticuloVehiculo_Modelo");

                            t.Property("NumeroSerie")
                                .HasColumnName("ArticuloVehiculo_NumeroSerie");
                        });

                    b.HasDiscriminator().HasValue("Vehiculo");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Articulo", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Almacen", "Almacen")
                        .WithMany("Articulos")
                        .HasForeignKey("IdAlmacen")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlantillaAlmacen.Models.CatalogoArticulo", "CatalogoArticulo")
                        .WithMany()
                        .HasForeignKey("IdCatalogoArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstatusArticulo", "EstatusArticulo")
                        .WithMany()
                        .HasForeignKey("IdEstatusArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("CatalogoArticulo");

                    b.Navigation("EstatusArticulo");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.ArticuloEstadoHistorial", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Articulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Asignacion", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("IdDepartamento");

                    b.HasOne("PlantillaAlmacen.Models.EstadoEntrega", "EstadoEntrega")
                        .WithMany()
                        .HasForeignKey("IdEstadoEntrega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstadoEntrega", "EstadoRecepcion")
                        .WithMany()
                        .HasForeignKey("IdEstadoRecepcion");

                    b.HasOne("PlantillaAlmacen.Models.Frente", "Frente")
                        .WithMany()
                        .HasForeignKey("IdFrente");

                    b.HasOne("PlantillaAlmacen.Models.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("IdPersonal");

                    b.Navigation("Articulo");

                    b.Navigation("Departamento");

                    b.Navigation("EstadoEntrega");

                    b.Navigation("EstadoRecepcion");

                    b.Navigation("Frente");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.AsignacionEvento", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Asignacion", "Asignacion")
                        .WithMany("Eventos")
                        .HasForeignKey("IdAsignacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstadoEntrega", "EstadoEntrega")
                        .WithMany()
                        .HasForeignKey("IdEstadoEntrega");

                    b.HasOne("PlantillaAlmacen.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Asignacion");

                    b.Navigation("EstadoEntrega");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.CatalogoArticulo", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("IdUnidadMedida");

                    b.Navigation("Categoria");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.MovimientoInventario", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloIdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.TipoMovimiento", "TipoMovimiento")
                        .WithMany()
                        .HasForeignKey("TipoMovimientoIdTipoMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Personal", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Departamento", "Departamento")
                        .WithMany("Personales")
                        .HasForeignKey("IdDepartamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.EstatusPersonal", "EstatusPersonal")
                        .WithMany("Personales")
                        .HasForeignKey("IdEstatusPersonal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Frente", "Frente")
                        .WithMany("Personales")
                        .HasForeignKey("IdFrente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Puesto", "Puesto")
                        .WithMany("Personales")
                        .HasForeignKey("IdPuesto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("EstatusPersonal");

                    b.Navigation("Frente");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.RolPermiso", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermiso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Usuario", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("IdPersonal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.UsuarioRol", b =>
                {
                    b.HasOne("PlantillaAlmacen.Models.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlantillaAlmacen.Models.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Almacen", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Asignacion", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Departamento", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.EstatusPersonal", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Frente", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Puesto", b =>
                {
                    b.Navigation("Personales");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Rol", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("PlantillaAlmacen.Models.Usuario", b =>
                {
                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
